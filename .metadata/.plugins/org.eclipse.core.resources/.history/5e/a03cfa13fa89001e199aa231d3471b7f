<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
	<%@page import = "java.io.PrintWriter" %>
	<%@page import = "bbs.BbsDAO" %>
	<%@page import = "bbs.Bbs" %>
	<%@page import = "java.util.ArrayList" %>
<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="viewport" content="width=device-width" , initial-scale="1">
<link rel="stylesheet" href="css/bootstrap.css">
<link rel="stylesheet" href="css/custom.css">
<link rel="stylesheet" href="css/index.css">
<title>JSP 게시판 웹 사이트</title>
<style type="text/css">
	a, a:hover{
		color: #000000;
		text-decoration: none;
	}
</style>
</head>
<body>
<%
		String userID = null;
		if(session.getAttribute("userID") != null){
			userID = (String) session.getAttribute("userID");
		}
		int pageNumber = 1;
		if(request.getParameter("pageNumber") != null){
			pageNumber = Integer.parseInt(request.getParameter("pageNumber"));
		}
		
		if(session.getAttribute("userID") != null){
			userID = (String) session.getAttribute("userID");
		}
		if(userID == null){
			PrintWriter script = response.getWriter();
			script.println("<script>");
			script.println("alert('로그인 후 입장 가능합니다.')");
			script.println("location.href = 'login.jsp'");
			script.println("</script>");
		} 
		
	%>
<nav class="navbar navbar-default">
		<div class="navbar-header">
			<button type="button" class="navbar-toggle collapsed"
				data-toggle="collapse" data-target="#bs-example-navbar-collapse-1"
				aria-expanded="false">
				<span class="icon-bar"></span> 
				<span class="icon-bar"></span> 
				<span class="icon-bar"></span>
			</button>
			<a class="navbar-brand" href="main.jsp">강의평가 웹 사이트</a>
		</div>
		<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
			<ul class="nav navbar-nav">
				<li><a href="main.jsp">메인</a></li>
				<li><a href="bbs.jsp">자유게시판</a></li>
				<li class = "active"><a href="chatroom.jsp">실시간채팅</a></li>
				<li><a href="evaluate.jsp">강의평가</a></li>
			</ul>
			<%
			if(userID == null){
			%>
			<ul class="nav navbar-nav navbar-right">
				<li class="dropdown">
				<a href="#" class="dropdown-toggle"
					data-toggle="dropdown" role="button" aria-haspopup="true"
					aria-expanded="false">접속하기<span class="caret"></span></a>
					<ul class="dropdown-menu">
						<li><a href="login.jsp">로그인</a></li>
						<li><a href="join.jsp">회원가입</a></li>	
					</ul>
				</li>
			</ul>
			<%
			} else{
			%>
			<ul class="nav navbar-nav navbar-right">
				<li class="dropdown">
				<a href="#" class="dropdown-toggle"
					data-toggle="dropdown" role="button" aria-haspopup="true"
					aria-expanded="false">회원관리<span class="caret"></span></a>
					<ul class="dropdown-menu">
						<li><a href="logoutAction.jsp">로그아웃</a></li>
					</ul>
				</li>
			</ul>
				
			<% 
			}
			%>
		</div>
	</nav>
	  <div class="wrapper">
    <div class="user-container">
      <label for="nickname">사용할 닉네임</label>
      <input type="text" id="nickname">
    </div>
    <div class="display-container">
      <ul class="chatting-list">
      
      </ul>
    </div>
    <div class="input-container">
      <span>
        <input type="text" class="chatting-input">
        <button class="send-button">전송</button>
      </span>
    </div>
  </div>
	
</body>
    
  <script src="js/chat.js"></script>
  <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
	<script src="js/bootstrap.js"></script>
</body>
<script type="text/javascript">
"use strict";

const socket = new WebSocket("ws://localhost:8080/JSP/broadcasting"); 

const nickname = document.querySelector("#nickname");
const chatList = document.querySelector(".chatting-list");
const chatInput = document.querySelector(".chatting-input");
const sendButton = document.querySelector(".send-button");
const displayContainer = document.querySelector(".display-container");

chatInput.addEventListener("keypress", (event) => {
  if (event.keyCode === 13) {
	
    send();
    chatInput.value = "";
  }
});

function send() {
  const param = {
    name: nickname.value,
    msg: chatInput.value,
    time: getCurrentTime(),
    
  };
  // 자신의 화면에도 메시지 추가
  const selfItem = new LiModel(param.name, param.msg, param.time);
  selfItem.makeLi();

  
  socket.send(JSON.stringify(param));
}
sendButton.addEventListener("click", () => {
	  send();
	  chatInput.value = "";
	});
function getCurrentTime() {
	  const now = new Date();
	  const hours = now.getHours().toString().padStart(2, "0");
	  const minutes = now.getMinutes().toString().padStart(2, "0");
	  const currentTime = `${hours}:${minutes}`;
	  return currentTime;
	}


socket.addEventListener("message", (event) => {
  const data = JSON.parse(event.data);
  const { name, msg, time } = data;
  const item = new LiModel(name, msg, time);
  item.makeLi();
  displayContainer.scrollTo(0, displayContainer.scrollHeight);
});

function LiModel(name, msg, time) {
  this.name = name;
  this.msg = msg;
  this.time = time;

  this.makeLi = () => {
	  
    const li = document.createElement("li");
    li.classList.add(nickname.value === this.name ? "sent" : "received");
    const dom = `<span class="profile">
      <span class="user">${this.name}</span>
      <img class="image" src="https://i.pinimg.com/736x/ac/2c/43/ac2c43b48b6a307cbe1844ed73e55eef.jpg" alt="any">
    </span>
    <span class="message">${this.msg}</span>
    <span class="time">${this.time}</span>`;
    li.innerHTML = dom;
    chatList.appendChild(li);
  };
}

</script>


</html>